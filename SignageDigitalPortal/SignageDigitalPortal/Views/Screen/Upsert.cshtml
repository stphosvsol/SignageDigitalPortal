@using SignageDigitalPortal.Resources
@model SignageRepository.Database.Screen

@{
    ViewBag.Title = "Pantallas";
    Layout = "~/Views/Shared/_LayoutScreen.cshtml";
}

@section scripts
{
    <script src="~/Scripts/App/Directives/pntInnDrct.js"></script>
    <script src="~/Scripts/App/Directives/channelDivDrct.js"></script>

    <script>
        app.controller('screenController', function($scope, $rootScope, $timeout) {
            $scope.screenSizes = @Html.Raw(ViewBag.ScreenSizes);

            $scope.init = function() {
                var screenSizeId = @Html.Raw(Model.CatScreenSizeId);
                if (screenSizeId === 0) {
                    $scope.screenSize = $scope.screenSizes[0];
                } else {
                    for (var i = $scope.screenSizes.length - 1; i >= 0; i--) {
                        var screenSize = $scope.screenSizes[i];
                        if (screenSize.Id === screenSizeId) {
                            $scope.screenSize = screenSize;
                            break;
                        }
                    }
                }
                $scope.screenSizeChange();
            };

            $scope.screenSizeChange = function() {
                $rootScope.$broadcast('screenSizeChange', $scope.screenSize);
            };

            $timeout(function() {
                $scope.init();
            }, 0);

            $scope.saveScreen = function(formId) {
                if ($(formId).valid() !== true) {
                    return;
                }
                $rootScope.$broadcast('onSaveScreen', { screenName: $scope.screenInfo.Name, screenSizeId: $scope.screenSize.Id, screenId: $scope.screenInfo.screenId });
            };
        });

        app.controller('channelController', function($scope, $rootScope, $http, $timeout, sharedSvc) {
            $scope.lstChannels = @Html.Raw(ViewBag.Channels);
            $scope.channelToSel = $scope.lstChannels[0];
            $scope.channels = @Html.Raw(ViewBag.Screens);
            $scope.channelSel = {};

            $scope.unselectChannels = function() {
                var len = $scope.channels.length;
                for (var i = 0; i < len; i++) {
                    var channel = $scope.channels[i];
                    if (channel.active === false)
                        channel.selected = false;
                }
            };

            $scope.init = function() {
                if ($scope.channels.length > 0) {
                    for (var i = $scope.channels.length - 1; i >= 0; i--) {
                        var channel = $scope.channels[i];
                        channel.onUnSelectChannel = $scope.unselectChannels;
                    }
                    $rootScope.$broadcast('onChannelAdd', $scope.channels);
                }
            };

            $scope.addChannel = function() {
                $scope.unselectChannels();
                $scope.channelSel = {
                    w: 300,
                    h: 300,
                    x: 0,
                    y: 0,
                    z: 0,
                    active: false,
                    selected: true,
                    name: $scope.channelToSel.Value,
                    idChannel: $scope.channelToSel.IdLg,
                    id: 0,
                    onUnSelectChannel: $scope.unselectChannels
                };
                $scope.channels.push($scope.channelSel);
                $rootScope.$broadcast('onChannelAdd', $scope.channels);
            };

            $scope.removeChannel = function() {
                for (var i = $scope.channels.length - 1; i >= 0; i--) {
                    var channel = $scope.channels[i];
                    if (channel.selected === true)
                        $scope.channels.splice(i, 1);
                }
            };

            $scope.$on('onSaveScreen', function(ev, dt) {
                //Validate not empty array
                var lenChn = $scope.channels.length;
                if (lenChn === 0) {
                    sharedSvc.showMsg({
                        Title: "Error al guardar",
                        Message: "Al menos debe existir un canal en la pantalla para realizar esta acción.",
                        Type: "danger"
                    });
                    return;
                }

                var arrScreenSchedule = [];

                for (var i = 0; i < lenChn; i++) {
                    var channel = $scope.channels[i];
                    var screenSchedule = {
                        RelChannelScreenId: channel.id,
                        ScreenId: dt.screenId,
                        ChannelId: channel.idChannel,
                        PositionX: channel.x,
                        PositionY: channel.y,
                        PositionZ: channel.z,
                        Width: channel.w,
                        Height: channel.h,
                    };
                    arrScreenSchedule.push(screenSchedule);
                }

                $http({
                    method: 'POST',
                    url: '@Url.Action("DoUpsert", "Device", new {area = ""})',
                    data: JSON.stringify({
                        Name: dt.screenName,
                        ScreenId: dt.screenId,
                        CatScreenSizeId: dt.screenSizeId,
                        ScreenSchedule: arrScreenSchedule
                    }),
                    cache: false,
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': encodeURIComponent($('[name=__RequestVerificationToken]').val())
                    }
                }).success($scope.handleSuccess).error($scope.handleError);
            });

            $scope.handleSuccess = function(data) {
                if (data.HasError) {
                    sharedSvc.showMsg({ Title: data.Title, Message: data.Message, Type: "danger" });
                    return;
                }
                window.goToUrlSafe(data.UrlToGo);
            };

            $scope.handleError = function() {
                sharedSvc.showMsg({ Title: "@ResShared.TITLE_REGISTER_FAILED", Message: '@ResShared.ERROR_NOT_NETWORK', Type: "danger" });
            };

            $timeout(function() {
                $scope.init();
            }, 0);
        });

        app.controller('preViewController', function($scope) {
            $scope.screen = { w: 0, h: 0 };
            $scope.channels = [];

            $scope.$on('onChannelAdd', function(ev, dt) {
                $scope.channels = dt;
            });

            $scope.$on('screenSizeChange', function(ev, dt) {
                $scope.screen.w = dt.Value.SizeX;
                $scope.screen.h = dt.Value.SizeY;
            });
        });
    </script>

}

<div class="row" style="margin: 5px" ng-cloak>
    <div class="col-xs-3 col-xs-offset-3">
        <div class="panel panel-info" ng-controller="screenController">
            <div class="panel-heading element-center"><span class="glyphicon glyphicon-th"></span>&nbsp;&nbsp;Pantalla</div>
            <div class="panel-body">
                <form id="ScreenForm">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.ScreenId, new {ng_model="screenInfo.screenId", ng_init="screenInfo.screenId = " + Model.ScreenId})
                    <div class="row">
                        <div class="col-xs-10 col-xs-offset-1 element-center">
                            <span class="control-label">Nombre de la pantalla</span>
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", ng_model = "screenInfo.Name", ng_init = "screenInfo.Name = '" + Model.Name + "'" })
                            <div class="control-label element-left">
                                @Html.ValidationMessageFor(m => m.Name)
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-xs-12 element-center">
                            <span class="control-label">Tamaño de la ventana</span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-8 col-xs-offset-2">
                            <select class="form-control element-center" ng-model="screenSize" ng-options="d.Value.Name for d in screenSizes" ng-change="screenSizeChange()"></select>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-xs-10 col-xs-offset-1">
                            <div class="element-center">
                                <div class="btn btn-info btn-sm" ng-click="saveScreen('#ScreenForm')"><span class="glyphicon glyphicon-save"></span>&nbsp;&nbsp;Guardar</div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="col-xs-3">
        <div class="panel panel-success" ng-controller="channelController">
            <div class="panel-heading element-center"><span class="glyphicon glyphicon-sd-video"></span>&nbsp;&nbsp;Canal</div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-xs-8 col-xs-offset-2">
                        <select class="form-control element-center" ng-model="channelToSel" ng-options="d.Value for d in lstChannels"></select>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-xs-6 element-center">
                        <div class="btn btn-success btn-sm" ng-click="addChannel()"><span class="glyphicon glyphicon-plus"></span>&nbsp;&nbsp;Agregar</div>
                    </div>
                    <div class="col-xs-6 element-center">
                        <div class="btn btn-danger btn-sm" ng-click="removeChannel()"><span class="glyphicon glyphicon-minus"></span>&nbsp;&nbsp;Eliminar</div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<div ng-controller="preViewController">
    <div class="row screen-wrapper" ng-style="{width:screen.w + 50}">
        <div class="col-xs-12 pad-main-col">
            <div class="panel panel-primary">
                <div class="panel-heading element-center"><span class="glyphicon glyphicon-picture"></span>&nbsp;&nbsp; Previsualización de la pantalla</div>
                <div class="panel-body" style="background-color: white">
                    <div id="screen-main" ng-model="screen" ng-style="{width:screen.w, height:screen.h}">
                        <div ng-repeat="channel in channels">
                            <channel-div channel="channel" screen="screen"></channel-div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
